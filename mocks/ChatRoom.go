// Code generated by mockery v2.33.2. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	models "github.com/wesmota/go-jobsity-chat-server/models"
)

// ChatRoom is an autogenerated mock type for the ChatRoom type
type ChatRoom struct {
	mock.Mock
}

// ListChatRooms provides a mock function with given fields:
func (_m *ChatRoom) ListChatRooms() ([]models.ChatRoom, error) {
	ret := _m.Called()

	var r0 []models.ChatRoom
	var r1 error
	if rf, ok := ret.Get(0).(func() ([]models.ChatRoom, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() []models.ChatRoom); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.ChatRoom)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewChatRoom creates a new instance of ChatRoom. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewChatRoom(t interface {
	mock.TestingT
	Cleanup(func())
}) *ChatRoom {
	mock := &ChatRoom{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
